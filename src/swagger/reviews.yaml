# Reviews Routes Documentation
paths:
  /api/reviews:
    get:
      tags:
        - Reviews
      summary: Get all reviews
      description: Retrieve all reviews with optional filtering
      parameters:
        - name: productId
          in: query
          description: Filter by product ID
          required: false
          schema:
            type: string
        - name: userId
          in: query
          description: Filter by user ID
          required: false
          schema:
            type: string
        - name: rating
          in: query
          description: Filter by rating (1-5)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
                  statusCode:
                    type: integer
                    example: 200

    post:
      tags:
        - Reviews
      summary: Create a new review
      description: Create a new product review
      security:
        - BearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CreateReviewRequest'
      responses:
        '201':
          description: Review created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  review:
                    $ref: '#/components/schemas/Review'
                  statusCode:
                    type: integer
                    example: 201
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/reviews/{id}:
    get:
      tags:
        - Reviews
      summary: Get review by ID
      description: Retrieve a specific review by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Review ID
          schema:
            type: string
      responses:
        '200':
          description: Review retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  review:
                    $ref: '#/components/schemas/Review'
                  statusCode:
                    type: integer
                    example: 200
        '404':
          description: Review not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Reviews
      summary: Update review
      description: Update a review (only by the review author)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Review ID
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateReviewRequest'
      responses:
        '200':
          description: Review updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  review:
                    $ref: '#/components/schemas/Review'
                  statusCode:
                    type: integer
                    example: 200
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - can only update own reviews
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Review not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Reviews
      summary: Delete review
      description: Delete a review (only by the review author or admin)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Review ID
          schema:
            type: string
      responses:
        '200':
          description: Review deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Review deleted successfully"
                  statusCode:
                    type: integer
                    example: 200
        '401':
          description: Unauthorized - authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - can only delete own reviews
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Review not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/reviews/product/{productId}:
    get:
      tags:
        - Reviews
      summary: Get reviews by product
      description: Retrieve all reviews for a specific product
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: Product reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
                  averageRating:
                    type: number
                    description: Average rating for the product
                  totalReviews:
                    type: integer
                    description: Total number of reviews
                  statusCode:
                    type: integer
                    example: 200
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 